<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" top="0" bottom="0" left="0" right="0" backgroundColor="#7cb7f3" 
	xmlns:component="info.emantis.view.component.*" creationComplete="doCreationComplete(event)">
	<mx:Script>
		<![CDATA[
			import views.components.SitePin;
			import model.vo.SiteVO;
			import model.KioskModelLocator;
			import views.components.SiteHighlight;
			import mx.controls.Alert;
			import flash.utils.Timer;
    		import flash.events.TimerEvent;
	
			private static const HIGHLIGHT_DELAY:int = 3000;
	
			[Embed(source="images/continents.svg")]
			[Bindable]
			private var map:Class;
			private var highlightTimer:Timer;
			private var currentHighlight:int;
			private var allHighlights:Array;
			
			private function doCreationComplete(event:Event):void {
            	this.highlightTimer = new Timer(HIGHLIGHT_DELAY, 0 );
            	this.highlightTimer.addEventListener( "timer" , showNextHighlight );
            	this.highlightTimer.start();
        	}

			private function showNextHighlight(event:TimerEvent):void {
				// The map isn't showing
				if (!this.visible){
					return;
				}
				
				if (allHighlights == null){
					// Do lazy construction, because the sites aren't available at doCreationComplete() time.
					constructHighlights();
				}
				
				allHighlights[currentHighlight].visible = false;
				
				// Increment the current highlight number, wrapping at the end
				currentHighlight < (KioskModelLocator.getInstance().sites.length - 1) ? currentHighlight++ : currentHighlight = 0;
				
				allHighlights[currentHighlight].visible = true;
			}

			private function constructHighlights():void {
				currentHighlight = 0;
				allHighlights = new Array();
				
				var i:int;
				var numSites:int = KioskModelLocator.getInstance().sites.length;
				
				for (i = 0; i < numSites; i++){
					var aHighlight:SiteHighlight = new SiteHighlight();
					
					aHighlight.site = SiteVO(KioskModelLocator.getInstance().sites.getItemAt(i));
					aHighlight.x = aHighlight.site.xPosition;
					aHighlight.y = aHighlight.site.yPosition;
					aHighlight.visible = false;
					
					this.addChild(aHighlight);
					allHighlights.push(aHighlight);
				}
			}
				
			public function layoutPins():void {
				for(var i:int=0; i < KioskModelLocator.getInstance().sites.length; i++) {
					var site:SiteVO = SiteVO(KioskModelLocator.getInstance().sites.getItemAt(i));
					var pin:SitePin = new SitePin();
					pin.site = site;
					pin.x = site.xPosition;
					pin.y = site.yPosition;
					this.addChild(pin);
				}
			}
			
		]]>
	</mx:Script>
	<mx:Image source="{map}" width="100%" left="0" right="0" maintainAspectRatio="true" scaleContent="true" scaleY="1.4" scaleX="1.4" verticalAlign="middle" horizontalAlign="center"/>
</mx:Canvas>